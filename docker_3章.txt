
Data Volumeとは
	Dockerコンテナ内のディレクトリをディスクに永続化するための仕組み

Data Volumeの作成
	docker container runコマンドに-vオプションを利用して行う

	docker container run -v ${PWD}:/workspace gihyodocker/imagemagick:latest convert -size 100x100 xc:#000000 /workspace/gihyo.jpg

MySQLのデータをData Volumeコンテナに保持する
# Dockerfileの作成
# ビルド
docker image build -t example/mysql-data:latest .

# mysql-dataという名前をつけてData Volumeコンテナを実行
docker container run -d --name mysql-data example/mysql-data:latest

# MySQLコンテナの実行
docker container run -d --rm --name mysql \
-e "MYSQL_ALLOW_EMPTY_PASSWORD=YES" \
-e "MYSQL_DATABASE=example" \
-e "MYSQL_USER=example" \
-e "MYSQL_PASSWORD=example" \
--volumes-from mysql-data \
mysql:5.7

# 実行中のmysqlコンテナにCREATE文とINSERT文をMySQLコンテナに流す
docker container exec -it mysql mysql -u root -p volume_test
docker container exec -it mysql mysql -u root -p example

CREATE TABLE user(
  id int PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE utf8mb4_unicode_ci;

INSERT INTO user (name) VALUES ('gihyo'), ('dokcer'), ('Solomon Hykes');

# コンテナの停止
docker container stop mysql

# データが残ってるか確認
# 起動
docker container run -d --rm --name mysql \
-e "MYSQL_ALLOW_EMPTY_PASSWORD=YES" \
-e "MYSQL_DATABASE=example" \
-e "MYSQL_USER=example" \
-e "MYSQL_PASSWORD=example" \
--volumes-from mysql-data \
mysql:5.7

# SQLに接続
docker container exec -it mysql mysql -u root -p example

# テーブルの表示
SELECT * FROM user;


